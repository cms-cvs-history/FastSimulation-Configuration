process PROD  = 
{

    # The number of events to be processed.
    untracked PSet maxEvents = {untracked int32 input = 10}
    
    service =  RandomNumberGeneratorService {
	# This is to initialize the random engine of the source
	untracked uint32 sourceSeed = 123456789
	# This is to initialize the random engines of Famos
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 famosPileUp = 918273
	    untracked uint32 famosSimHits = 13579
	    untracked uint32 siTrackerGaussianSmearingRecHits = 24680
	    untracked uint32 caloRecHits = 654321
	    untracked uint32 paramMuons = 54525
	}
    }
    
    // If you want to use the (CMS default) CLHEP random, 
    // set these ones to false
    replace famosPileUp.UseTRandomEngine = true
    replace famosSimHits.UseTRandomEngine = true
    replace siTrackerGaussianSmearingRecHits.UseTRandomEngine = true
    replace caloRecHits.UseTRandomEngine = true
    replace paramMuons.UseTRandomEngine = true

    # Generate ttbar events
    include "FastSimulation/Configuration/data/ttbar.cfi"
     
    # Famos sequences
    include "FastSimulation/Configuration/data/FamosSequences.cff"
    // If you want to turn on/off pile-up
    replace famosPileUp.PileUpSimulator.averageNumber = 5.0
    // Parametrized magnetic field
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    // You may not want to simulate everything for your study
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true

    # Tracker MisAlignement 
    include "FastSimulation/Configuration/data/MisAlignment.cff" 

    # ECAL miscalibration. 
    include "FastSimulation/Configuration/data/MisCalibration.cff"
	 	
    # HCAL miscalibration 
    # 1) RMS (1.0 means 10% RMS miscalibration, 0.5 means 5%, 2.0 means 20%)
    # Default is 0.0 (i.e., no miscalibration)
    replace hcalRecHits.Refactor = 1.0
    # 2) Bias (1.0 means no bias, 1.1 means 10% positive bias)
    # Default is 1.0 (i.e., no bias)
    replace hcalRecHits.Refactor_mean = 0.95	 	


    service = Timing { }
    
    path p1 = { 
	famosWithEverything
    }

    # To write out events (not need: FastSimulation _is_ fast!)
    /* */
    include "FastSimulation/Configuration/data/EventContent.cff"
    module o1 = PoolOutputModule { 
	using AODSIMEventContent
	untracked string fileName = "AODIntegrationTest.root" 
    }
    endpath outpath = { o1 }
    /* */
    
    # Keep the logging output to a nice level #
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.destinations = {"detailedInfo.txt"}
    
}		
