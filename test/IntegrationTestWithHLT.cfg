process HLT  = 
{

    # The number of events to be processed.
    untracked PSet maxEvents = { untracked int32 input = 100 }
    
    # Include the RandomNumberGeneratorService definition
    include "FastSimulation/Configuration/data/RandomServiceInitialization.cff"

    # Generate ttbar events
    include "FastSimulation/Configuration/data/ttbar.cfi"
     
    # Famos sequences (with frontier conditions)
    include "FastSimulation/Configuration/data/CommonInputs.cff"
    include "FastSimulation/Configuration/data/FamosSequences.cff"

    # L1 Emulator and HLT Setup
    include "FastSimulation/HighLevelTrigger/data/common/HLTSetup.cff"
    include "HLTrigger/Configuration/data/common/HLTPrescaleReset.cff"

    // If you want to turn on/off pile-up
    replace famosPileUp.PileUpSimulator.averageNumber = 0.0
    // Parametrized magnetic field
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    // You may not want to simulate everything for your study
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true

    // Get frontier conditions
    // Values for globaltag are "STARTUP::All", "1PB::All", "10PB::All", "IDEAL::All"
    replace GlobalTag.globaltag = "IDEAL_V1::All"

    // Apply ECAL miscalibration (ideal calibration though) and HCAL miscalibration
    replace caloRecHits.RecHitsFactory.doMiscalib=true

    // Apply Tracker misalignment (ideal alignment though)
    replace famosSimHits.ApplyAlignment = true
    replace misalignedTrackerGeometry.applyAlignment = true

    // Apply HCAL miscalibration (not ideal in that case)
    replace caloRecHits.RecHitsFactory.HCAL.Refactor = 1.0
    replace caloRecHits.RecHitsFactory.HCAL.Refactor_mean = 1.00


    # service = Timing { }

    # Simulation
    sequence simulation = { simulationWithFamos }

    # L1 Menu and prescale factors : useful for testing all L1 paths
    include "Configuration/StandardSequences/data/L1TriggerDefaultMenu.cff"
    # L1 Menu 2008 2x10E30 - Prescale
    # include "L1TriggerConfig/L1GtConfigProducers/data/Luminosity/lumi1030/L1Menu2008_2E30.cff"
    # L1 Menu 2008 2x10E30 - No Prescale
    # include "L1TriggerConfig/L1GtConfigProducers/data/Luminosity/lumi1030/L1Menu2008_2E30_Unprescaled.cff"
    # L1 Menu 2008 2x10E31 - Prescale
    # include "L1TriggerConfig/L1GtConfigProducers/data/Luminosity/lumi1031/L1Menu2008_2E31.cff"
    # L1 Menu 2008 2x10E31 - No Prescale
    # include "L1TriggerConfig/L1GtConfigProducers/data/Luminosity/lumi1031/L1Menu2008_2E31_Unprescaled.cff"
    # L1 Menu 2008 10E32 - Prescale 
    # include "L1TriggerConfig/L1GtConfigProducers/data/Luminosity/lumix1032/L1Menu2007.cff"
    # L1 Menu 2008 10E32 - No Prescale 
    # include "L1TriggerConfig/L1GtConfigProducers/data/Luminosity/lumix1032/L1Menu2007_Unprescaled.cff"

    # Reconstruction of events passing the HLT filters:
    sequence HLTEndSequence = { reconstructionWithFamos }

    # Reconstruction of all events, including those rejected at L1/HLT
    # Uncomment this line (and the path reconstruction)
    # sequence HLTEndSequence = { dummyModule }

    # HLT paths : now use the confDB-made HLT paths !
    #include "HLTrigger/Configuration/data/main/HLTpaths.cff"
    # This one is created on the fly by FastSimulation/Configuration/test/IntegrationTestWithHLT.csh
    include "FastSimulation/Configuration/test/HLT.cff"

    # Note : if your process is not called HLT, you have to change that! 
    #replace hltTrigReport.HLTriggerResults = TriggerResults::PROD
    #replace hltHighLevel.TriggerResultsTag = TriggerResults::PROD 

    # Reconstruction of all events, including those rejected at L1/HLT
    # Uncomment this path
    # path reconstruction = { reconstructionWithFamos } 
 
    # To write out events 
    include "FastSimulation/Configuration/data/EventContent.cff"
    module o1 = PoolOutputModule { 
	using AODSIMEventContent
	untracked string fileName = "AODIntegrationTestWithHLT.root" 
    }
    endpath outpath = { o1 }
    
    # Keep the logging output to a nice level #
    # include "FWCore/MessageService/data/MessageLogger.cfi"
    # replace MessageLogger.destinations = {"detailedInfo.txt"}
    
}		
