process HLT  = 
{

    # The number of events to be processed.
    untracked PSet maxEvents = {untracked int32 input = 100}
    
    # Include the RandomNumberGeneratorService definition
    include "FastSimulation/Configuration/data/RandomServiceInitialization.cff"

    # Generate ttbar events
    include "FastSimulation/Configuration/data/ttbar.cfi"
     
    # Famos sequences (With fake conditions)
    include "FastSimulation/Configuration/data/CommonInputsFake.cff"
    include "FastSimulation/Configuration/data/FamosSequences.cff"

    # L1 Emulator and HLT Setup
    include "FastSimulation/HighLevelTrigger/data/common/HLTSetup.cff"
    include "Configuration/StandardSequences/data/L1TriggerDefaultMenu.cff"
    include "HLTrigger/Configuration/data/common/HLTPrescaleReset.cff"

    // If you want to turn on/off pile-up
    replace famosPileUp.PileUpSimulator.averageNumber = 0.0
    // Parametrized magnetic field
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    // You may not want to simulate everything for your study
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true

    # service = Timing { }

    # Simulation
    sequence simulation = { simulationWithFamos }

    /*
    // prescale factors at L1 : useful for testing all L1 paths, but commented by default
    replace l1GtFactors.PrescaleFactors = {
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1
    }
    */

    # No reconstruction
    sequence HLTEndSequence = { dummyModule }

    # HLT paths -- removed in favor of ConfDB configuration
    # include "HLTrigger/Configuration/data/main/HLTpaths.cff"
    # This one is created on the fly by FastSimulation/Configuration/test/ExampleWithHLT.csh
    include "FastSimulation/Configuration/test/HLT.cff"

    # Note : if your process is not called HLT, you have to change that! 
    # replace hltTrigReport.HLTriggerResults = TriggerResults::HLT

    # No reconstruction 	
    /* 
    path reconstruction = { 
	doCalo & towerMakerForAll & // Work-around because of a bug in HLT 
	reconstructionWithFamos // Reconstruction sequence
    }
    */
 
    # To write out events 
    include "FastSimulation/Configuration/data/EventContent.cff"
    module o1 = PoolOutputModule { 
    	using AODSIMEventContent
    	untracked string fileName = "AODWithHLT.root"
    }
    endpath outpath = { o1 }
    
    # Keep the logging output to a nice level #
#    include "FWCore/MessageService/data/MessageLogger.cfi"
#    replace MessageLogger.destinations = {"detailedInfo-ExampleWithHLT.txt"}
    
}		
